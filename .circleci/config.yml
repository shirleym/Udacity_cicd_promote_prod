version: 2.1
jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "prod-${CIRCLE_WORKFLOW_ID}" \
            --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name cloudfront \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"


  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar
      - run: |
          aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run: $OldPipelineID = cat ~/output.txt
      - run: |
          aws s3 rm "s3://${OldPipelineID}" --recursive
      - run: |
          aws cloudformation delete-stack --stack-name "${OldPipelineID}"



workflows:
  my_workflow:
    jobs:
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - create_and_deploy_front_end
      - clean_up_old_front_end:
          requires:
            - create_and_deploy_front_end
            - get_last_deployment_id
